version: '3'
services:
  api:
    build:
      context: ../
      dockerfile: api.Dockerfile
    environment:
      DATABASE_DIALECT: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: ethService0114
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: postgres
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      CONTEXT_TIMEOUT_SECS: 10
      GIN_MODE: debug
      JSON_RPC_ENDPOINT: https://mainnet.infura.io/v3/49c81384a9ed44f1bcdb04c5efbc776f
      WS_ENDPOINT: wss://mainnet.infura.io/ws/v3/49c81384a9ed44f1bcdb04c5efbc776f
      SQL_MAX_IDLE_CONNS: 10
      SQL_MAX_OPEN_CONNS: 100
      SQL_CONN_MAX_LIFE_MINUTES: 60
    restart: 'always'
    ports:
      - "8080:8080"
    depends_on:
      - 'db'
  ethservice:
    build:
      context: ../
      dockerfile: eth.Dockerfile
    environment:
      DATABASE_DIALECT: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: ethService0114
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: postgres
      CONTEXT_TIMEOUT_SECS: 10
      JSON_RPC_ENDPOINT: https://mainnet.infura.io/v3/49c81384a9ed44f1bcdb04c5efbc776f
      WS_ENDPOINT: wss://mainnet.infura.io/ws/v3/49c81384a9ed44f1bcdb04c5efbc776f
      CONFIRMED_BLOCK_NUM: 20
      SYNC_BLOCK_FROM_N: 16418600
      SCAN_WORK_NUM: 2
      WRITE_TRANSACTION_WORK_NUM: 2
      SQL_MAX_IDLE_CONNS: 10
      SQL_MAX_OPEN_CONNS: 100
      SQL_CONN_MAX_LIFE_MINUTES: 60
    restart: 'always'
    depends_on:
      - 'db'
  db:
    image: postgres:15.1-alpine
    ports:
      - "5432:5432"
    command:
      - "-c"
      - "log_destination=stderr"
      - "-c"
      - "log_connections=yes"
      - "-c"
      - "log_disconnections=yes"
      - "-c"
      - "log_statement=all"
    volumes:
      - ./db_seed.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ethService0114
    restart: always